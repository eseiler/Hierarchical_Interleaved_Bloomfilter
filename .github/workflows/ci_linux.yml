# SPDX-FileCopyrightText: 2006-2023, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2023, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Unit Linux

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - unlabeled
  workflow_dispatch:

concurrency:
  group: linux-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eexuo pipefail {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'lint'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "clang17"
            compiler: "clang-17"
            build: unit
            build_type: Release
            cxx_flags: "-stdlib=libc++"

          - name: "gcc13"
            compiler: "gcc-13"
            build: unit
            build_type: Release

          - name: "gcc12"
            compiler: "gcc-12"
            build: unit
            build_type: Release

          - name: "gcc11"
            compiler: "gcc-11"
            build: unit
            build_type: Release

          - name: "IntelLLVM"
            compiler: "intel"
            build: unit
            build_type: Release
            cxx_flags: "-Xclang=-Wno-pass-failed"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: false

      - name: Setup toolchain
        uses: seqan/actions/setup-toolchain@main
        with:
          compiler: ${{ matrix.compiler }}
          ccache_size: 75M

      - name: Install CMake
        if: contains(matrix.compiler, 'intel') == false
        uses: seqan/actions/setup-cmake@main
        with:
          cmake: 3.18.6

      - name: Configure tests
        run: |
          mkdir build
          cd build
          cmake ../test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                            -DHIBF_NATIVE_BUILD=OFF \
                                            -DHIBF_VERBOSE_TESTS=OFF \
                                            -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}"
          make -j2 gtest_main

      - name: Build tests
        run: |
          ccache -z
          cd build
          make -k -j2
          ccache -sv

      - name: Run tests
        run: |
          cd build
          ctest . -j2 --output-on-failure

